function fetchUser() {
        fetch("https://randomuser.me/api/?inc=gender,name,nat,email,location,phone,dob&results=10")
        .then(res => res.json())
        .then(data => {
          console.log(data)
          setUser(data)
        }) 
    }




const fetchUsers = async () => {
        const res = await fetch("https://randomuser.me/api/?inc=id,gender,name,picture,email,location,phone,dob&results=100")
        const data = await res.json();       
          setUsers(data.results)
          setIsLoading(false)
    };
    fetchUsers();



useEffect(() =>  {
        fetch("https://randomuser.me/api/?inc=id,gender,name,picture,email,location,phone,dob&results=100")
        .then(res => res.json())
        .then(data => {    
          setUsers(data.results)
          setIsLoading(false)
        }) 
  }, []);


// Map over Page Array and Change page
  const pageNumbers = pageNumbersArr.map(number => {
     return <li key={number} className="page-item"><button onClick={(e) => {
       if (number == "Prev"){
         setCurrentPage((prev) => prev === 1 ? prev : prev-1)
       }else if (number == "Next"){
         setCurrentPage((prev) => prev === length/perPage ? prev : prev+1)
       }else {
       setCurrentPage(number);
       }
       if (number === "Prev" && currentPage ===1  || number === "Next" && currentPage ===postLength){
         e.preventDefault()
       }
     }} className="page-link">{number}</button></li>
  })



return (
    <ErrorBoundary FallbackComponent={ErrorFallback} onError={errorHandler}>
      <div>{isLoading && <div>Loading......</div>} </div>
      <div className="user-overall">
        <h1 className="user-h1">User Details</h1>
        <>{users && usersMapped}</>
        <div className="current-page">Page <span className="strong">{currentPage} </span> of {postLength} </div><br></br>
        <section className="pagination-container">
          <button className="page-link" disabled={currentPage <= 1} aria-disabled={currentPage <= 1} onClick={() => setCurrentPage(prev => prev-1)}>Prev</button>
          <div className="pagination">{pageNumbers}</div>
          <button className="page-link" disabled={currentPage >= postLength} aria-disabled={currentPage >= 1} onClick={() => setCurrentPage(prev => prev+1)}>Next</button>
        </section>
      </div>
    </ErrorBoundary>
  )
}